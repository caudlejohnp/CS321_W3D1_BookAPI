// <auto-generated />
using System;
using CS321_W3D1_BookAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CS321_W3D1_BookAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200628211846_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("CS321_W3D1_BookAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1892, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "J.R.R.",
                            LastName = "Tolkein"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1977, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Brent",
                            LastName = "Weeks"
                        });
                });

            modelBuilder.Entity("CS321_W3D1_BookAPI.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<string>("Category");

                    b.Property<int>("PublisherId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Category = "Fantasy",
                            PublisherId = 1,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Category = "Fantasy",
                            PublisherId = 1,
                            Title = "The Fellowship of the Ring"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Category = "Fantasy",
                            PublisherId = 1,
                            Title = "The Two Towers"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Category = "Fantasy",
                            PublisherId = 2,
                            Title = "The Broken Mirror"
                        });
                });

            modelBuilder.Entity("CS321_W3D1_BookAPI.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryofOrigin");

                    b.Property<int>("FoundedYear");

                    b.Property<string>("HeadQuartersLocation");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryofOrigin = "USA",
                            FoundedYear = 1925,
                            HeadQuartersLocation = "NY, NY",
                            Name = "Viking Press"
                        },
                        new
                        {
                            Id = 2,
                            CountryofOrigin = "USA",
                            FoundedYear = 1897,
                            HeadQuartersLocation = "NY, NY",
                            Name = "Doubleday"
                        });
                });

            modelBuilder.Entity("CS321_W3D1_BookAPI.Models.Book", b =>
                {
                    b.HasOne("CS321_W3D1_BookAPI.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CS321_W3D1_BookAPI.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
